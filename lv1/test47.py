# https://school.programmers.co.kr/learn/courses/30/lessons/132267
# 콜라 문제

# 문제 설명
# 오래전 유행했던 콜라 문제가 있습니다. 콜라 문제의 지문은 다음과 같습니다.

# 정답은 아무에게도 말하지 마세요.

# 콜라 빈 병 2개를 가져다주면 콜라 1병을 주는 마트가 있다. 
# 빈 병 20개를 가져다주면 몇 병을 받을 수 있는가?

# 단, 보유 중인 빈 병이 2개 미만이면, 콜라를 받을 수 없다.

# 문제를 풀던 상빈이는 콜라 문제의 완벽한 해답을 찾았습니다.
# 상빈이가 푼 방법은 아래 그림과 같습니다. 우선 콜라 빈 병 20병을 가져가서
# 10병을 받습니다. 받은 10병을 모두 마신 뒤, 가져가서 5병을 받습니다. 
# 5병 중 4병을 모두 마신 뒤 가져가서 2병을 받고, 또 2병을 모두 마신 뒤 가져가서
# 1병을 받습니다. 받은 1병과 5병을 받았을 때 남은 1병을 모두 마신 뒤 가져가면 
# 1병을 또 받을 수 있습니다. 이 경우 상빈이는 총 10 + 5 + 2 + 1 + 1 = 19병의 
# 콜라를 받을 수 있습니다.

# 콜라를 받기 위해 마트에 주어야 하는 병 수 a, 빈 병 a개를 가져다 주면 
# 마트가 주는 콜라 병 수 b, 상빈이가 가지고 있는 빈 병의 개수 n이 
# 매개변수로 주어집니다. 상빈이가 받을 수 있는 콜라의 병 수를 
# return 하도록 solution 함수를 작성해주세요.

# 제한사항
# 1 ≤ b < a ≤ n ≤ 1,000,000
# 정답은 항상 int 범위를 넘지 않게 주어집니다.

a = 3
b = 2
n = 20

# 일반화
# n병에서 처음 a병을 가져다주면 b병을 받음
# 재귀함수 ?
def bottle(n, a, b, sum=0):
    if n < a: return sum
    return bottle((n%a)+(n//a)*b, a, b, sum+(n//a)*b)


# case 12에서 런타임 뜸
# 아마 재귀 너무 많이해서 그런듯
# 조금 더 일반화
# n - (a - b)*k < a 를 만족하는 k의 최소값을 구하면 됌
# k는 교환 횟수, k*b가 받는 총 병수가 된다
# 정리하면
# k > (n-a)/(a-b) 를 만족하는 k의 최소값
# k = (n-a)//(a-b) + 1 이 됌

k = int((n-a)/(a-b)) + 1
answer = k*b
print(answer)

# 제출용 함수
def solution(a, b, n):
    k = int((n-a)/(a-b)) + 1
    answer = k*b
    return answer